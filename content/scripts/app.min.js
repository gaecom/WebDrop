angular.module("webdrop.controllers.file",[]).controller("fileCtrl",["$scope","$routeParams",function(e,n){function o(e,n){return{webdropType:e,data:n}}function t(e){return function(){r(e)}}function r(n){return h.receivedChunkCount>=e.fileRequest.metaData.chunkCount?(v(),void 0):(console.log("Ask for chunk "+n),p.channels[e.fileRequest.userId].send(o("requestChunk",{chunkIndex:n,fileId:e.fileRequest.fileId})),g=setTimeout(t(n),500),void 0)}function l(e){v=e,r(0)}function s(n){e.status="User "+n+" does not offer the file you requested."}function a(n,o){void 0===h.receivedChunks[o.index]?(clearTimeout(g),console.log("Chunk "+o.index+" received"),h.receivedChunks[o.index]=o.data,h.receivedChunkCount++,f({remaining:e.fileRequest.metaData.chunkCount-h.receivedChunkCount,received:h.receivedChunkCount,length:e.fileRequest.metaData.chunkCount}),r(o.index+1)):console.log("Chunk "+i+" already received, IGNORING")}function u(n){e.fileRequest.progress.type="error",e.status="File transfer from "+n+" failed."}function c(n,o){e.fileRequest.metaData=o,l(function(){return d(o.name)})}function d(n){e.status="File '"+n+"' received!",e.fileRequest.progress={type:"success",value:100},fileUrl=h.receivedChunks.join("");var o=document.createElement("a");o.href=fileUrl,o.target="_blank",o.download=n||fileUrl;var t=document.createEvent("MouseEvents");t.initMouseEvent("click",!0,!0,window,1,0,0,0,0,!1,!1,!1,!1,0,null),o.dispatchEvent(t),(window.URL||window.webkitURL).revokeObjectURL(o.href),e.$apply()}function f(n){var o=new Date;"undefined"==typeof e.fileRequest.startTime&&(e.fileRequest.startTime=o);var t=o-e.fileRequest.startTime,r="--";if(e.fileRequest.metaData.size>0)var l=n.received*m/t,s=1e3*(l/1024),r=s.toFixed(2);e.status="Downloading file... ( "+r+" kB/s )";var a=parseInt(100*(n.received/n.length),10);e.fileRequest.progress.value=a,e.$apply()}var m=800;e.fileRequest={roomCode:n.roomCode,fileId:n.fileId,userId:n.userId,progress:{type:"info",value:0},metaData:{name:"Unknown",size:-1,chunkCount:-1}};var h={receivedChunks:[],receivedChunkCount:0};e.progress={type:"info",value:0},e.status="Waiting for user...";var p=new DataChannel("room"+e.fileRequest.roomCode,{transmitRoomOnce:!1,autoCloseEntireSession:!1});p.openSignalingChannel=function(e){var n="http://192.168.0.112:3000/",o=e.channel||this.channel||"default-channel";console.log("openSignal channel "+o);var t=Math.round(60535*Math.random())+5e3;io.connect(n+"rtc").emit("newChannel",{channel:o,sender:t});var r=io.connect(n+o);r.channel=o,r.on("connect",function(){e.callback&&e.callback(r)}),r.send=function(e){r.emit("message",{sender:t,data:e})},r.on("message",e.onmessage)};var g=null,v=null,C={fileRequestFailed:s,fileRequestMetaData:c,fileRequestChunk:a,fileRequestChunkFailed:u};p.onmessage=function(n,o){C[n.webdropType](o,n.data),e.$apply()},p.onopen=function(n,t){e.fileRequest.userId==n?(console.log("Found user, sending file request"),t.send(JSON.stringify(o("requestMetaData",e.fileRequest.fileId))),console.log("Sent file request"),e.status="User found, requesting file...",e.$apply()):console.log("Found wrong user "+n)},p.onleave=function(n){e.fileRequest.progress={type:"error",value:100},e.status="User "+n+" left before the transfer could be completed.",e.$apply()},p.onclose=function(e){console.log("ERROR: Data ports closed"),console.log(e)},p.onerror=function(e){console.log("ERROR: Unknown error occured"),console.log(e)}}]),angular.module("webdrop.controllers.main",[]).controller("mainCtrl",["$scope","$location",function(e,n){e.joinRoom=function(){n.path("/room/"+e.roomToJoin)},e.newRoom=function(){}}]),angular.module("webdrop.controllers.room",[]).controller("roomCtrl",["$scope","$routeParams",function(e,n){function o(n){delete e.connectedUsers[n]}function t(n){console.log("adding user "+n),e.connectedUsers[n]={nickName:"unknown"}}function r(e,n){return{webdropType:e,data:n}}function l(n,o){var t=e.connectedUsers[n].nickName;e.messages.push({from:t,text:o})}function s(n,o){if("undefined"!=typeof e.offeredFiles[o]){var t=e.offeredFiles[o];i.channels[n].send(r("fileRequestMetaData",{name:t.name,size:t.size,chunkCount:t.chunks.length}))}else console.log("File requested: File not found"),i.channels[n].send(r("fileRequestFailed"))}function a(n,o){if("undefined"!=typeof e.offeredFiles[o.fileId]){var t=e.offeredFiles[o.fileId].chunks[o.chunkIndex];i.channels[n].send(r("fileRequestChunk",{index:o.chunkIndex,data:t}))}else i.channels[n].send(r("fileRequestChunkFailed"))}e.offeredFiles={},e.roomCode=n.roomCode,e.currentUserId="",e.messages=[],e.connectedUsers={},e.sendMessage=function(){e.messageToSend&&""!=e.messageToSend&&(e.messages.push({from:i.userid,text:e.messageToSend}),i.send(r("message",e.messageToSend)),e.messageToSend="")};var i=new DataChannel("room"+e.roomCode,{transmitRoomOnce:!1,autoCloseEntireSession:!1});i.openSignalingChannel=function(n){var o="http://192.168.0.112:3000/",t=n.channel||this.channel||"default-channel";console.log("openSignal channel "+t),e.currentUserId=t.userid,e.$apply();var r=Math.round(60535*Math.random())+5e3;io.connect(o+"rtc").emit("newChannel",{channel:t,sender:r});var l=io.connect(o+t);l.channel=t,l.on("connect",function(){n.callback&&n.callback(l)}),l.send=function(e){l.emit("message",{sender:r,data:e})},l.on("message",n.onmessage)};var u={message:l,requestMetaData:s,requestChunk:a};i.onmessage=function(n,o){u[n.webdropType](o,n.data),e.$apply()},i.onopen=function(n){t(n),e.$apply()},i.onleave=function(n){o(n),e.$apply()},i.onclose=function(e){console.log("ERROR: Data ports closed"),console.log(e)},i.onerror=function(e){console.log("ERROR: Unknown error occured"),console.log(e)}}]),angular.module("webdrop.directives.fileoffer",[]).directive("fileOffer",[function(){return{scope:!1,link:function(e,n,o){function t(e){var n=[],o=Math.ceil(e.length/l);console.log("Number of chunks: "+o);for(var t=0;o>t;t++)n.push(e.substring(t*l,t*l+l));return n}var r=e[o.fileOffer],l=800;n.bind("change",function(n){var o=n.target.files,l=o[0];if(l){var s=new FileReader;s.onload=function(n){var o=t(n.target.result);r[l.name]={name:l.name,size:l.size,chunks:o},e.$apply()},s.readAsDataURL(l)}})}}}]),function(){angular.module("webdrop.controllers",["webdrop.controllers.main","webdrop.controllers.room","webdrop.controllers.file"]),angular.module("webdrop.directives",["ui.bootstrap","webdrop.directives.fileoffer"]),angular.module("webdrop",["webdrop.controllers","webdrop.directives"],["$routeProvider",function(e){e.when("/",{controller:"mainCtrl",templateUrl:"views/main.html"}).when("/room/:roomCode",{controller:"roomCtrl",templateUrl:"views/room.html"}).when("/file/:roomCode/:userId/:fileId",{controller:"fileCtrl",templateUrl:"views/file.html"}).otherwise({redirectTo:"/"})}])}();
//@ sourceMappingURL=app.min.js.map